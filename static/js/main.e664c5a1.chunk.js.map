{"version":3,"sources":["dolphin.svg","components/UserInput.jsx","redux/players/playerActions.js","redux/players/playerTypes.js","components/Matrixsize.jsx","redux/game/gameActions.js","redux/game/gameTypes.js","components/Authentication.jsx","components/Navbar.jsx","components/Square.jsx","components/TicTacToe.jsx","components/Game.jsx","components/PlayerScore.jsx","components/Scoreboard.jsx","components/Register.jsx","redux/players/playerReducer.js","redux/game/gameReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserInput","state","redEmail","redPassword","redVerified","blueEmail","bluePassword","blueVerified","handleSubmit","event","team","a","preventDefault","email","password","firebase","auth","signInWithEmailAndPassword","authUser","firestore","collection","doc","get","userRef","userData","data","player","username","user","total_score","total_matches","props","authenticateRed","authenticateBlue","setState","console","log","window","alert","message","handleInput","target","name","value","btn","status","style","color","marginLeft","visibility","className","to","onSubmit","e","htmlFor","type","onChange","this","Component","connect","dispatch","p","payload","Matrixsize","disabled","matrixSize","componentDidUpdate","Number","changeDimension","handleUpdate","id","placeholder","onClick","pointerEvents","red","verified","blue","d","AuthenticationPage","Navbar","src","dolphin","alt","Square","x","y","side","content","endGame","squareStyle","width","height","fontSize","squareClick","textContent","xando","innerHTML","dim","TicTacToe","dimensions","coord","turn","values","innerContainer","outerContainer","reset","onReset","handleWinner","count","diag1","diag2","win","i","row","col","xy","onWinner","handleClick","coordinates","onChangeTurn","game","val","j","push","map","index","key","GamePage","round","redScore","blueScore","handleStatus","handlePlay","updateRound","updateTurn","location","reload","handleEndGame","resetRound","redRef","update","FieldValue","increment","blueRef","history","winner","updateScore","handleTurn","handleReset","rand","Math","floor","random","t","r","PlayerScore","no","Scoreboard","players","loadPlayers","then","snapshot","forEach","length","sort","b","parseInt","align","Register","confirmPassword","handleRegister","createUserWithEmailAndPassword","messageRef","set","autoComplete","backgroundColor","score","playerReducer","action","gameReducer","nextTurn","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","devToolsEnhancer","persistor","persistStore","subscribe","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","loading","basename","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e664c5a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dolphin.8592cf61.svg\";","import React, { Component } from \"react\";\r\nimport \"../styles/UserInput.css\";\r\nimport firebase from \"firebase/app\";\r\nimport { connect } from \"react-redux\";\r\nimport { redAuthenticated, blueAuthenticated } from \"../redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserInput extends Component {\r\n  state = {\r\n    //red\r\n    redEmail: \"\",\r\n    redPassword: \"\",\r\n    redVerified: false,\r\n    //blue\r\n    blueEmail: \"\",\r\n    bluePassword: \"\",\r\n    blueVerified: false,\r\n  };\r\n\r\n  handleSubmit = async (event, team) => {\r\n    event.preventDefault();\r\n\r\n    const email = this.state[team + \"Email\"],\r\n      password = this.state[team + \"Password\"];\r\n\r\n    try {\r\n      const authUser = await firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password);\r\n\r\n      const userRef = await firebase\r\n        .firestore()\r\n        .collection(team)\r\n        .doc(email)\r\n        .get();\r\n\r\n      const userData = userRef.data();\r\n\r\n      const player = {\r\n        username: userData.username,\r\n        email: authUser.user.email,\r\n        total_score: userData.total_score,\r\n        total_matches: userData.total_matches,\r\n      };\r\n\r\n      if (team === \"red\") {\r\n        this.props.authenticateRed(player);\r\n      } else if (team === \"blue\") {\r\n        this.props.authenticateBlue(player);\r\n      }\r\n      this.setState({ [team + \"Verified\"]: true });\r\n\r\n      console.log(team, this.props.player);\r\n\r\n      window.alert(team + \" user verified!\");\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  };\r\n\r\n  handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  btn = (status) => {\r\n    let style;\r\n    style = {\r\n      color: \"white\",\r\n      marginLeft: \"5px\",\r\n    };\r\n    if (status === true) {\r\n      style.visibility = \"visible\";\r\n    } else {\r\n      style.visibility = \"hidden\";\r\n    }\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section className=\"ui-wave\">\r\n          <div className=\"title\">Marine Games</div>\r\n          <div className=\"scoreboard\">\r\n            <Link to=\"/scoreboard\" className=\"scoretitle\">\r\n              Scoreboard\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"flex-row1\">\r\n            <i style={{ color: \"white\" }} className=\"fab fa-joomla fa-9x\"></i>\r\n            <i style={{ color: \"white\" }} className=\"fab fa-slack fa-9x\"></i>\r\n          </div>\r\n\r\n          <div className=\"wave wave1\"></div>\r\n          <div className=\"wave wave2\"></div>\r\n          <div className=\"wave wave3\"></div>\r\n          <div className=\"wave wave4\"></div>\r\n        </section>\r\n\r\n        <div className=\"userinput-field\">\r\n          <form\r\n            className=\"blueteam-ui\"\r\n            onSubmit={(e) => this.handleSubmit(e, \"blue\")}\r\n          >\r\n            <label htmlFor=\"blueEmail\">Username</label>\r\n            <input\r\n              name=\"blueEmail\"\r\n              type=\"email\"\r\n              onChange={(e) => this.handleInput(e)}\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              name=\"bluePassword\"\r\n              type=\"password\"\r\n              onChange={(e) => this.handleInput(e)}\r\n            />\r\n            <button className=\"verify-btn\" type=\"submit\">\r\n              Verify\r\n              <span style={this.btn(this.state.blueVerified)}>\r\n                <i className=\"fas fa-check-circle\"></i>\r\n              </span>\r\n            </button>\r\n          </form>\r\n          <form\r\n            className=\"redteam-ui\"\r\n            onSubmit={(e) => this.handleSubmit(e, \"red\")}\r\n          >\r\n            <label htmlFor=\"redEmail\">Username</label>\r\n            <input\r\n              name=\"redEmail\"\r\n              type=\"email\"\r\n              onChange={(e) => this.handleInput(e)}\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              name=\"redPassword\"\r\n              type=\"password\"\r\n              onChange={(e) => this.handleInput(e)}\r\n            />\r\n            <button className=\"verify-btn\" type=\"submit\">\r\n              Verify\r\n              <span style={this.btn(this.state.redVerified)}>\r\n                <i className=\"fas fa-check-circle\"></i>\r\n              </span>\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    authenticateRed: (p) => dispatch(redAuthenticated(p)),\r\n    authenticateBlue: (p) => dispatch(blueAuthenticated(p)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(UserInput);\r\n//use null if we don't want to use mapStateToProps\r\n","import {\r\n  RED_AUTHENTICATE,\r\n  BLUE_AUTHENTICATE,\r\n  UPDATE_SCORE,\r\n} from \"./playerTypes\";\r\n\r\nconst redAuthenticated = (data) => {\r\n  return {\r\n    type: RED_AUTHENTICATE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst blueAuthenticated = (data) => {\r\n  return {\r\n    type: BLUE_AUTHENTICATE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst updateScore = (data) => {\r\n  return {\r\n    type: UPDATE_SCORE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport { redAuthenticated, blueAuthenticated, updateScore };\r\n","const RED_AUTHENTICATE = \"RED_AUTHENTICATE\";\r\nconst BLUE_AUTHENTICATE = \"BLUE_AUTHENTICATE\";\r\nconst UPDATE_SCORE = \"UPDATE_SCORE\";\r\nexport { RED_AUTHENTICATE, BLUE_AUTHENTICATE, UPDATE_SCORE };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateDimension } from \"../redux\";\r\nimport \"../styles/Matrixsize.css\";\r\n\r\nclass Matrixsize extends Component {\r\n  state = {\r\n    disabled: true,\r\n    matrixSize: 3,\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    console.log(this.props);\r\n    if (\r\n      this.props.redVerified === true &&\r\n      this.props.blueVerified === true &&\r\n      this.state.disabled === true\r\n    ) {\r\n      this.setState({ disabled: false });\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const matrixSize = Number(this.state.matrixSize);\r\n    this.props.changeDimension(matrixSize);\r\n  };\r\n\r\n  handleUpdate = (e) => {\r\n    const matrixSize = e.target.value;\r\n    this.setState({ matrixSize });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-row\">\r\n        <form className=\"matrix\">\r\n          <input\r\n            id=\"matrixsize\"\r\n            type=\"number\"\r\n            name=\"MatrixSize\"\r\n            placeholder=\"Matrix Size\"\r\n            className=\"matrix-input\"\r\n            onChange={this.handleUpdate}\r\n          />\r\n          <Link\r\n            to=\"/game\"\r\n            onClick={this.handleSubmit}\r\n            className=\"submit\"\r\n            style={{\r\n              pointerEvents: this.state.disabled === true ? \"none\" : \"auto\",\r\n            }}\r\n          >\r\n            Start Game\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    redVerified: state.player.red.verified,\r\n    blueVerified: state.player.blue.verified,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeDimension: (d) => dispatch(updateDimension(d)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrixsize);\r\n","import {\r\n  END_GAME,\r\n  UPDATE_DIMENSIONS,\r\n  UPDATE_TURN,\r\n  UPDATE_ROUND,\r\n  RESET_ROUND,\r\n} from \"./gameTypes\";\r\n\r\nconst updateTurn = (currentTurn) => {\r\n  return {\r\n    type: UPDATE_TURN,\r\n    payload: currentTurn,\r\n  };\r\n};\r\n\r\nconst updateRound = () => {\r\n  return {\r\n    type: UPDATE_ROUND,\r\n  };\r\n};\r\n\r\nconst updateDimension = (dimension) => {\r\n  return {\r\n    type: UPDATE_DIMENSIONS,\r\n    payload: dimension,\r\n  };\r\n};\r\n\r\nconst endGame = () => {\r\n  return {\r\n    type: END_GAME,\r\n  };\r\n};\r\n\r\nconst resetRound = ()=>{\r\n  return {\r\n    type: RESET_ROUND,\r\n  }\r\n}\r\n\r\nexport { updateTurn, updateRound, updateDimension, endGame, resetRound };\r\n","const UPDATE_DIMENSIONS = \"UPDATE_DIMENSIONS\";\r\nconst UPDATE_ROUND = \"UPDATE_ROUND\";\r\nconst END_GAME = \"END_GAME\";\r\nconst UPDATE_TURN = \"UPDATE_TURN\";\r\nconst RESET_ROUND = \"RESET_ROUND\";\r\n\r\nexport { UPDATE_DIMENSIONS, UPDATE_ROUND, UPDATE_TURN, END_GAME, RESET_ROUND };\r\n","import React, { Component } from \"react\";\r\nimport UserInput from \"./UserInput\";\r\nimport Matrixsize from \"./Matrixsize\";\r\nimport \"../styles/Authentication.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AuthenticationPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"authBody\">\r\n        <UserInput />\r\n        <div className=\"register-section\">\r\n          <Link className=\"auth-register\" to=\"/register\">\r\n            Register\r\n          </Link>\r\n        </div>\r\n        <Matrixsize />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthenticationPage;\r\n","import React, { Component } from \"react\";\r\nimport dolphin from \"../dolphin.svg\";\r\nimport \"../styles/Navbar.css\";\r\n\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbarBrand\">\r\n          <img className=\"logo\" src={dolphin} alt=\"logo\" />\r\n          <span className=\"title\">Marine Games</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Square.css\";\r\n\r\nclass Square extends Component {\r\n  state = {\r\n    x: 0,\r\n    y: 0,\r\n    side: 0,\r\n    content: null,\r\n    endGame: false,\r\n\r\n    squareStyle: {\r\n      width: 0,\r\n      height: 0,\r\n      fontSize: 0,\r\n    },\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.setState({ endGame: props.endGame });\r\n  }\r\n\r\n  squareClick = (event) => {\r\n    const { x, y, endGame } = this.state;\r\n    let value = event.target.textContent;\r\n    if (value !== \"X\" && value !== \"O\" && endGame === false) {\r\n      const xando = this.props.player === \"X\" ? \"X\" : \"O\";\r\n      event.target.innerHTML =\r\n        \"<div class='\" + xando + \"'>\" + this.props.player + \"</div>\";\r\n      this.props.onClick({ x: x, y: y });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //it is aceptable to directly change the state only in constructor else setState is prefered\r\n    const { x, y, dim, width } = this.props;\r\n    this.state.x = x;\r\n    this.state.y = y;\r\n    let side = (0.97 * width) / dim;\r\n\r\n    this.state.side = side;\r\n    this.state.squareStyle.width = side;\r\n    this.state.squareStyle.height = side;\r\n    this.state.squareStyle.fontSize = side / 2;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={this.state.squareStyle}\r\n        className=\"square\"\r\n        onClick={(e) => {\r\n          this.squareClick(e);\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"../styles/tttstyle.css\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass TicTacToe extends Component {\r\n  state = {\r\n    dimensions: 3,\r\n    width: 450,\r\n    coord: [],\r\n    turn: \"X\",\r\n    values: [],\r\n    endGame: false,\r\n    style: {},\r\n  };\r\n\r\n  style = {\r\n    innerContainer: {\r\n      width: this.state.width,\r\n      height: this.state.width,\r\n    },\r\n    outerContainer: {\r\n      width: this.state.width * 1.01,\r\n      height: this.state.width * 1.01,\r\n    },\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.dimensions = Number(this.props.game.dimensions);\r\n    let d = this.state.dimensions;\r\n    for (let i = 0; i < d; i++) {\r\n      let val = [];\r\n      for (let j = 0; j < d; j++) {\r\n        this.state.coord.push([i, j]);\r\n        val.push(0);\r\n      }\r\n      this.state.values.push(val);\r\n    }\r\n    this.state.turn = this.props.turn;\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.props.reset === true) {\r\n      this.setState({\r\n        coord: [],\r\n        endGame: false,\r\n      });\r\n      this.props.onReset();\r\n    }\r\n  };\r\n\r\n  handleWinner = () => {\r\n    let { values, dimensions } = this.state;\r\n    let count = 0;\r\n    let diag1 = [0, 0];\r\n    let diag2 = [0, 0];\r\n    let win = null;\r\n    for (var i = 0; i < dimensions; i++) {\r\n      let row = [0, 0];\r\n      let col = [0, 0];\r\n      for (var xy = 0; xy < dimensions; xy++) {\r\n        row[0] = values[i][xy] === \"X\" ? row[0] + 1 : row[0];\r\n        row[1] = values[i][xy] === \"O\" ? row[1] + 1 : row[1];\r\n        col[0] = values[xy][i] === \"X\" ? col[0] + 1 : col[0];\r\n        col[1] = values[xy][i] === \"O\" ? col[1] + 1 : col[1];\r\n        if (values[i][xy] !== 0) {\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (row[0] === dimensions || col[0] === dimensions) {\r\n        win = \"X\";\r\n        break;\r\n      } else if (row[1] === dimensions || col[1] === dimensions) {\r\n        win = \"O\";\r\n        break;\r\n      }\r\n\r\n      diag1[0] = values[i][i] === \"X\" ? diag1[0] + 1 : diag1[0];\r\n      diag1[1] = values[i][i] === \"O\" ? diag1[1] + 1 : diag1[1];\r\n      diag2[0] =\r\n        values[i][dimensions + i - 1] === \"X\" ? diag2[0] + 1 : diag2[0];\r\n      diag2[1] =\r\n        values[i][dimensions + i - 1] === \"O\" ? diag2[1] + 1 : diag2[1];\r\n    }\r\n\r\n    if (diag1[0] === dimensions || diag2[0] === dimensions) {\r\n      win = \"X\";\r\n    } else if (diag1[1] === dimensions || diag2[1] === dimensions) {\r\n      win = \"O\";\r\n    }\r\n\r\n    if (win === \"X\") {\r\n      this.props.onWinner(\"X\");\r\n      this.setState({ endGame: true });\r\n    } else if (win === \"O\") {\r\n      this.props.onWinner(\"O\");\r\n      this.setState({ endGame: true });\r\n    } else if (count === dimensions * dimensions) {\r\n      this.props.onWinner(\"D\");\r\n      this.setState({ endGame: true });\r\n    }\r\n  };\r\n\r\n  handleClick = (coordinates) => {\r\n    if (!this.state.endGame) {\r\n      const { x, y } = coordinates;\r\n      let { values, turn } = this.state;\r\n      values[x][y] = turn;\r\n      turn = turn === \"X\" ? \"O\" : \"X\";\r\n      this.setState({ values: values, turn: turn }, () => {\r\n        this.props.onChangeTurn(this.state.turn);\r\n      });\r\n      this.handleWinner();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"outer-container\" style={this.style.outerContainer}>\r\n        <div className=\"inner-container\" style={this.style.innerContainer}>\r\n          {this.state.coord.map((d, index) => {\r\n            return (\r\n              <Square\r\n                onClick={this.handleClick}\r\n                player={this.state.turn}\r\n                key={index}\r\n                x={d[0]}\r\n                y={d[1]}\r\n                dim={this.state.dimensions}\r\n                width={this.state.width}\r\n                endGame={this.state.endGame}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    game: state.game,\r\n  };\r\n};\r\nexport default connect(mapStateToProps,null)(TicTacToe);\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport Navbar from \"./Navbar\";\r\nimport TicTacToe from \"./TicTacToe\";\r\nimport \"../styles/Game.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  updateTurn,\r\n  updateRound,\r\n  endGame,\r\n  updateScore,\r\n  resetRound,\r\n} from \"../redux\";\r\nclass GamePage extends Component {\r\n  state = {\r\n    round: 1,\r\n    status: \"\",\r\n    turn: \"\",\r\n    endGame: false,\r\n    redScore: 0,\r\n    blueScore: 0,\r\n    reset: false,\r\n  };\r\n\r\n  handleStatus = () => {\r\n    if (!this.state.endGame) {\r\n      const { turn } = this.state;\r\n      const { red, blue } = this.props;\r\n      if (turn === \"X\") {\r\n        this.setState({ status: \"It's \" + red.username + \"'s turn\" });\r\n      } else if (turn === \"O\") {\r\n        this.setState({ status: \"It's \" + blue.username + \"'s turn\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n    const { red, blue } = this.props;\r\n    this.state.redScore = red.total_score;\r\n    this.state.blueScore = blue.total_score;\r\n\r\n    const rand = Math.floor((Math.random() * 10) % 2);\r\n    if (rand === 1) {\r\n      this.state.status = \"It's \" + blue.username + \"'s turn\";\r\n      this.state.turn = \"O\";\r\n    } else if (rand === 0) {\r\n      this.state.status = \"It's \" + red.username + \"'s turn\";\r\n      this.state.turn = \"X\";\r\n    }\r\n  }\r\n\r\n  handlePlay = () => {\r\n    this.props.updateRound();\r\n    this.props.updateTurn();\r\n    window.location.reload();\r\n  };\r\n\r\n  handleEndGame = async () => {\r\n    this.props.resetRound();\r\n    const { red, blue, game } = this.props;\r\n\r\n    try {\r\n      const redRef = await firebase\r\n        .firestore()\r\n        .collection(\"red\")\r\n        .doc(red.email);\r\n      await redRef.update({\r\n        total_score: red.total_score,\r\n        total_matches: firebase.firestore.FieldValue.increment(game.round),\r\n      });\r\n\r\n      const blueRef = await firebase\r\n        .firestore()\r\n        .collection(\"blue\")\r\n        .doc(blue.email);\r\n      await blueRef.update({\r\n        total_score: blue.total_score,\r\n        total_matches: firebase.firestore.FieldValue.increment(game.round),\r\n      });\r\n\r\n      this.props.history.push(\"/\");\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  };\r\n\r\n  handleWinner = (winner) => {\r\n    const { red, blue } = this.props;\r\n    if (winner === \"D\") {\r\n      // console.log(\"It's a draw!\");\r\n      this.setState({ status: \"It's a draw!\", endGame: true });\r\n    } else {\r\n      // console.log(\"The winner is \" + winner);\r\n      if (winner === \"X\") {\r\n        this.setState({\r\n          status: \"The winner is \" + red.username,\r\n          endGame: true,\r\n          redScore: this.state.redScore + 1,\r\n        });\r\n        this.props.updateScore(\"red\");\r\n      } else if (winner === \"O\") {\r\n        this.setState({\r\n          status: \"The winner is \" + blue.username,\r\n          endGame: true,\r\n          blueScore: this.state.blueScore + 1,\r\n        });\r\n        this.props.updateScore(\"blue\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleTurn = (turn) => {\r\n    this.setState({ turn }, () => {\r\n      this.handleStatus();\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ reset: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gameBody\">\r\n        <Navbar />\r\n        {/* Match score here */}\r\n        <div className=\"matchscore\">\r\n          <div className=\"red-col\">\r\n            <i className=\"fab fa-slack fa-5x\"></i>\r\n            <div className=\"redscore\" width=\"50vw\" height=\"50vh\">\r\n              <div className=\"player-name\">{this.props.red.username}</div>\r\n              <div className=\"red-player-score\">\r\n                {this.props.red.total_score}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"blue-col\">\r\n            <div className=\"bluescore\" width=\"50vw\" height=\"50vh\">\r\n              <div className=\"blue-player-score\">\r\n                {this.props.blue.total_score}\r\n              </div>\r\n              <div className=\"player-name\">{this.props.blue.username}</div>\r\n            </div>\r\n            <i className=\"fab fa-joomla fa-5x\"></i>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"layout\">\r\n          <TicTacToe\r\n            turn={this.state.turn}\r\n            reset={this.state.reset}\r\n            onReset={this.handleReset}\r\n            onWinner={this.handleWinner}\r\n            onChangeTurn={this.handleTurn}\r\n          />\r\n          <div className=\"status-container\">\r\n            <div className=\"round\">{`Round ${this.props.game.round}`}</div>\r\n            <div className=\"status\">{this.state.status}</div>\r\n            <div>\r\n              <button className=\"btn\" onClick={() => this.handlePlay()}>\r\n                Play Again\r\n              </button>\r\n              <button className=\"btn\" onClick={() => this.handleEndGame()}>\r\n                End Game\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    red: state.player.red,\r\n    blue: state.player.blue,\r\n    game: state.game,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTurn: (t) => dispatch(updateTurn(t)),\r\n    updateRound: (r) => dispatch(updateRound(r)),\r\n    updateScore: (t) => dispatch(updateScore(t)),\r\n    endGame: () => dispatch(endGame()),\r\n    resetRound: () => dispatch(resetRound()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);\r\n","import React, { Component } from \"react\";\r\n\r\nclass PlayerScore extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"rowline\">\r\n        <div className=\"number-col\">{this.props.no + 1}</div>\r\n\r\n        <div className=\"col\" style={{ color: this.props.data.color }}>\r\n          {this.props.data.username}\r\n        </div>\r\n\r\n        <div className=\"score-col\">{this.props.data.total_score}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerScore;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport PlayerScore from \"./PlayerScore\";\r\nimport \"../styles/Scoreboard.css\";\r\nclass Scoreboard extends Component {\r\n  state = {\r\n    players: [],\r\n  };\r\n\r\n  loadPlayers = async () => {\r\n    let players = [];\r\n\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"red\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          let player = { ...doc.data(), team: \"red\", color: \"#ff6464\" };\r\n          players.push(player);\r\n        });\r\n      });\r\n\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"blue\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          let player = { ...doc.data(), team: \"blue\", color: \"#00e0ff\" };\r\n          players.push(player);\r\n        });\r\n      });\r\n\r\n    if (players.length < 10) {\r\n      for (var i = players.length; i < 10; i++) {\r\n        players.push({\r\n          email: \"-\",\r\n          username: \"-\",\r\n          total_score: 0,\r\n          team: \"-\",\r\n          total_matches: 0,\r\n          color: \"#d6e0f0\",\r\n        });\r\n      }\r\n    }\r\n\r\n    players.sort((a, b) => parseInt(b.total_score) - parseInt(a.total_score));\r\n\r\n    console.log(players);\r\n    this.setState({ players: players });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadPlayers();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"leaderboardContainer\">\r\n        <div className=\"tableboard\" align=\"center\">\r\n          <div className=\"score-board-title\">Leader Board</div>\r\n          <div>\r\n            {this.state.players.map((player, index) => {\r\n              return <PlayerScore key={index} no={index} data={player} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"wave wave1\"></div>\r\n        <div className=\"wave wave2\"></div>\r\n        <div className=\"wave wave3\"></div>\r\n        <div className=\"wave wave4\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scoreboard;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"../styles/Register.css\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    team: \"\",\r\n    confirmPassword: \"\",\r\n    status: \"Join the pirates army!\",\r\n  };\r\n\r\n  handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleRegister = async (event) => {\r\n    event.preventDefault();\r\n    const { username, email, password, team, confirmPassword } = this.state;\r\n\r\n    if (password === confirmPassword) {\r\n      try {\r\n        const auth = await firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email, password);\r\n        console.log(\"Auth is done!\");\r\n        const messageRef = await firebase\r\n          .firestore()\r\n          .collection(team)\r\n          .doc(auth.user.email);\r\n\r\n        console.log(\"Adding message\");\r\n        await messageRef.set({\r\n          username: username,\r\n          email: auth.user.email,\r\n          total_matches: 0,\r\n          total_score: 0,\r\n        });\r\n\r\n        this.props.history.push(\"/\");\r\n      } catch (error) {\r\n        window.alert(error.message);\r\n      }\r\n    } else {\r\n      this.setState({ status: \"Password's don't match\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"title\">Marine Games</div>\r\n        <form className=\"input-field\" onSubmit={this.handleSubmit}>\r\n          <div className=\"registration-status\">{this.state.status}</div>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <div className=\"team-btns\">\r\n            <div\r\n              className=\"blue team-btn\"\r\n              style={{\r\n                backgroundColor: this.state.team === \"blue\" && \"white\",\r\n              }}\r\n              onClick={() => this.setState({ team: \"blue\" })}\r\n            >\r\n              Blue Team\r\n            </div>\r\n            <div\r\n              className=\"red team-btn\"\r\n              style={{\r\n                backgroundColor: this.state.team === \"red\" && \"white\",\r\n              }}\r\n              onClick={() => this.setState({ team: \"red\" })}\r\n            >\r\n              Red Team\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={(event) => {\r\n              this.handleRegister(event);\r\n            }}\r\n            className=\"register-btn\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n        <div className=\"wave wave1\"></div>\r\n        <div className=\"wave wave2\"></div>\r\n        <div className=\"wave wave3\"></div>\r\n        <div className=\"wave wave4\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import {\r\n  RED_AUTHENTICATE,\r\n  BLUE_AUTHENTICATE,\r\n  UPDATE_SCORE,\r\n} from \"./playerTypes\";\r\n\r\nconst player = {\r\n  red: {\r\n    username: \"\",\r\n    email: \"\",\r\n    score: 0,\r\n    verified: false,\r\n  },\r\n  blue: {\r\n    username: \"\",\r\n    email: \"\",\r\n    score: 0,\r\n    verified: false,\r\n  },\r\n};\r\n\r\nconst playerReducer = (state = player, action) => {\r\n  // console.log(\"payload\", action.payload);\r\n  switch (action.type) {\r\n    case RED_AUTHENTICATE:\r\n      return {\r\n        ...state,\r\n        red: { ...action.payload, verified: true },\r\n      };\r\n    case BLUE_AUTHENTICATE:\r\n      return {\r\n        ...state,\r\n        blue: { ...action.payload, verified: true },\r\n      };\r\n    case UPDATE_SCORE: {\r\n      const team = action.payload;\r\n      if (team === \"red\") {\r\n        return {\r\n          ...state,\r\n          red: {\r\n            ...state.red,\r\n            total_score: state.red.total_score + 1,\r\n          },\r\n        };\r\n      } else if (team === \"blue\") {\r\n        return {\r\n          ...state,\r\n          blue: {\r\n            ...state.blue,\r\n            total_score: state.blue.total_score + 1,\r\n          },\r\n        };\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playerReducer;\r\n","import {\r\n  END_GAME,\r\n  UPDATE_DIMENSIONS,\r\n  UPDATE_TURN,\r\n  UPDATE_ROUND,\r\n  RESET_ROUND\r\n} from \"./gameTypes\";\r\n\r\nconst game = {\r\n  dimensions: 3,\r\n  round: 1,\r\n  turn: \"X\",\r\n  endGame: false,\r\n};\r\n\r\nconst gameReducer = (state = game, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_DIMENSIONS:\r\n      return {\r\n        ...state,\r\n        dimensions: action.payload,\r\n      };\r\n    case UPDATE_TURN: {\r\n      const nextTurn = action.payload === \"X\" ? \"O\" : \"X\";\r\n      return {\r\n        ...state,\r\n        turn: nextTurn,\r\n      };\r\n    }\r\n    case UPDATE_ROUND:\r\n      return {\r\n        ...state,\r\n        round: state.round + 1,\r\n      };\r\n    case END_GAME:\r\n      return {\r\n        ...state,\r\n        endGame: true,\r\n      };\r\n    case RESET_ROUND:\r\n      return{\r\n        ...state,\r\n        round:1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport playerReducer from \"./players/playerReducer\";\r\nimport gameReducer from \"./game/gameReducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\n\r\nconst rootReducer = combineReducers({\r\n  player: playerReducer,\r\n  game: gameReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nlet store = createStore(persistedReducer, devToolsEnhancer());\r\nlet persistor = persistStore(store);\r\nlet unsubscribe=store.subscribe(()=>{});\r\n\r\nexport { store, persistor,unsubscribe };\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"./App.css\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport AuthenticationPage from \"./components/Authentication\";\r\nimport GamePage from \"./components/Game\";\r\nimport Scoreboard from \"./components/Scoreboard\";\r\nimport Register from \"./components/Register\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nlet firebaseConfig = {\r\n  apiKey: \"AIzaSyAQaXEhUIoZNPfVqRqvaf3zSb2CR2XGb-M\",\r\n  authDomain: \"we-chat-f9868.firebaseapp.com\",\r\n  projectId: \"we-chat-f9868\",\r\n  storageBucket: \"we-chat-f9868.appspot.com\",\r\n  messagingSenderId: \"1081408803740\",\r\n  appId: \"1:1081408803740:web:4d330e298db634f5e86e59\",\r\n  measurementId: \"G-V196FRSMYT\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <Router basename=\"/\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={AuthenticationPage} />\r\n              <Route path=\"/game\" component={GamePage} />\r\n              <Route path=\"/scoreboard\" component={Scoreboard} />\r\n              <Route path=\"/register\" component={Register} />\r\n            </Switch>\r\n          </Router>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}